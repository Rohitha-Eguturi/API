openapi: 3.0.1
info:
  title: GCash Payments API
  description: Create and manage GCash payments (redirect flow) using Adyen-style integration.
  termsOfService: https://new.gcash.com/terms-and-conditions
  contact:
    name: Example Payments Team
    url: https://example.com
  version: 1.0.0
  x-ibm-name: gcash-payments-api
servers:
  - url: /gcash
security:
  - ApiKeyAuth: []
paths:
  /payments:
    post:
      summary: Create a GCash payment (redirect)
      description: >
        Initiates a GCash payment and returns a redirect URL where the shopper completes payment.
        By default Adyen's redirect page expires after 30 minutes (adjustable with merchant settings). :contentReference[oaicite:1]{index=1}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Create GCash Payment Request
              type: object
              required:
                - amount
                - currency
                - merchantReference
                - returnUrl
              properties:
                amount:
                  type: integer
                  description: Minor units (e.g., PHP cents). Example: 10000 = PHP 100.00
                  example: 10000
                currency:
                  type: string
                  example: PHP
                merchantReference:
                  type: string
                  description: Merchant's reference (order id)
                  example: ORD-20250912-001
                returnUrl:
                  type: string
                  description: URL shopper is returned to after payment (merchant site)
                  example: https://merchant.example.com/checkout/result
                expiryMinutes:
                  type: integer
                  description: Requested redirect link expiry in minutes (defaults to 30 if omitted)
                  example: 30
                recurring:
                  type: boolean
                  description: Whether to store payment details for recurring payments (if merchant and scheme support it)
                  example: false
      responses:
        "201":
          description: Payment created. Contains redirectUrl for shopper.
          content:
            application/json:
              schema:
                title: Create GCash Payment Response
                type: object
                properties:
                  paymentId:
                    type: string
                    example: pay_7a1b2c3d
                  status:
                    type: string
                    enum: [PENDING, REDIRECTED]
                    example: REDIRECTED
                  amount:
                    type: integer
                    example: 10000
                  currency:
                    type: string
                    example: PHP
                  redirectUrl:
                    type: string
                    format: uri
                    description: URL where shopper completes the GCash payment (valid for expiryMinutes or default 30 minutes). :contentReference[oaicite:2]{index=2}
                    example: https://checkout.adyen.com/redirect/... 
                  expiresAt:
                    type: string
                    format: date-time
                    description: Expiration timestamp for the redirect URL.
        "400":
          description: Invalid request
  /payments/{paymentId}:
    get:
      summary: Retrieve payment status
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Payment status and details
          content:
            application/json:
              schema:
                title: Payment Status
                type: object
                properties:
                  paymentId:
                    type: string
                    example: pay_7a1b2c3d
                  status:
                    type: string
                    enum: [PENDING, AUTHORIZED, CAPTURED, REFUNDED, CANCELLED, FAILED]
                    example: AUTHORIZED
                  amount:
                    type: integer
                  currency:
                    type: string
                  merchantReference:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
                  gcashReference:
                    type: string
                    description: Provider reference id (if available)
  /payments/{paymentId}/refunds:
    post:
      summary: Refund a payment (full or partial)
      description: Create a refund for a captured GCash payment. Adyen supports refunds and partial refunds for GCash. :contentReference[oaicite:3]{index=3}
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Refund Request
              type: object
              required:
                - amount
                - currency
              properties:
                amount:
                  type: integer
                  description: Minor units to refund (partial allowed)
                  example: 5000
                currency:
                  type: string
                  example: PHP
                reason:
                  type: string
                  example: "Customer requested refund"
      responses:
        "201":
          description: Refund accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  refundId:
                    type: string
                    example: ref_abc123
                  status:
                    type: string
                    enum: [PENDING, REFUNDED, FAILED]
                    example: PENDING
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas: {}
x-ibm-configuration:
  properties:
    target-url:
      value: "https://backend.example.com/gcash/payments"
      description: URL of the upstream payment orchestration implementation
      encoded: false
  cors:
    enabled: true
  gateway: datapower-api-gateway
  type: rest
  phase: realized
  enforced: true
  testable: true
  assembly:
    execute:
      - invoke:
          title: create gcash payment backend
          version: 1.0.0
          verb: POST
          target-url: $(target-url)
          timeout: 60
          output: createPaymentResponse
      - parse:
          version: 2.1.0
          title: parse response
          parse-settings-reference:
            default: apic-default-parsesettings
          input: createPaymentResponse
          output: createPaymentResponse
    finally: []
activity-log:
  enabled: true
  success-content: activity
  error-content: payload
